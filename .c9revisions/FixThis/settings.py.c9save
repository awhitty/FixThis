{"ts":1353996496470,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# Django settings for FixThis project.\nimport os\ncwd = os.getcwd()\n\nDEBUG = True\nTEMPLATE_DEBUG = DEBUG\n\nADMINS = (\n    # ('Your Name', 'your_email@example.com'),\n)\n\nMANAGERS = ADMINS\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.\n        'HOST': 'ec2-54-243-125-4.compute-1.amazonaws.com',\n        'PORT': '5432',\n        'NAME': 'ddqenrropkc298',                      # Or path to database file if using sqlite3.\n        'USER': 'zuwfisdrensnww',\n        'PASSWORD': 'BwCzTLL34wsH5TmReUQMuvwf7I',\n    }\n}\n\ndef get_cache():\n  import os\n  try:\n    os.environ['MEMCACHE_SERVERS'] = os.environ['MEMCACHIER_SERVERS']\n    os.environ['MEMCACHE_USERNAME'] = os.environ['MEMCACHIER_USERNAME']\n    os.environ['MEMCACHE_PASSWORD'] = os.environ['MEMCACHIER_PASSWORD']\n    return {\n      'default': {\n        'BACKEND': 'django_pylibmc.memcached.PyLibMCCache',\n        'LOCATION': os.environ['MEMCACHIER_SERVERS'],\n        'TIMEOUT': 500,\n        'BINARY': True,\n      }\n    }\n  except:\n    return {\n      'default': {\n        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n        'LOCATION': '127.0.0.1:11211',\n      }\n    }\n\nCACHES = get_cache()\n\n# CACHES = {\n#     'default': {\n#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',\n#         'LOCATION': '127.0.0.1:11211',\n#     }\n# }\n\n\n# Local time zone for this installation. Choices can be found here:\n# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name\n# although not all choices may be available on all operating systems.\n# In a Windows environment this must be set to your system time zone.\nTIME_ZONE = 'America/Chicago'\n\n# Language code for this installation. All choices can be found here:\n# http://www.i18nguy.com/unicode/language-identifiers.html\nLANGUAGE_CODE = 'en-us'\n\nSITE_ID = 1\n\n# If you set this to False, Django will make some optimizations so as not\n# to load the internationalization machinery.\nUSE_I18N = True\n\n# If you set this to False, Django will not format dates, numbers and\n# calendars according to the current locale.\nUSE_L10N = True\n\n# If you set this to False, Django will not use timezone-aware datetimes.\nUSE_TZ = True\n\n# Absolute filesystem path to the directory that will hold user-uploaded files.\n# Example: \"/var/www/example.com/media/\"\n# MEDIA_ROOT = cwd + '/media/'\n\n# # URL that handles the media served from MEDIA_ROOT. Make sure to use a\n# # trailing slash.\n# # Examples: \"http://example.com/media/\", \"http://media.example.com/\"\n# MEDIA_URL = '/media/'\n\n# # Absolute path to the directory static files should be collected to.\n# # Don't put anything in this directory yourself; store your static files\n# # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.\n# # Example: \"/var/www/example.com/static/\"\n# STATIC_ROOT = cwd + '/static/'\n\n# # URL prefix for static files.\n# # Example: \"http://example.com/static/\", \"http://static.example.com/\"\n# STATIC_URL = '/static/'\n\nDEFAULT_FILE_STORAGE = 's3_folder_storage.s3.DefaultStorage'\nDEFAULT_S3_PATH = \"media\"\nSTATICFILES_STORAGE = 's3_folder_storage.s3.StaticStorage'\nSTATIC_S3_PATH = \"static\"\nAWS_ACCESS_KEY_ID = \"AKIAIEDYWPP54C3FPF4A\"\nAWS_SECRET_ACCESS_KEY = \"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\"\nAWS_STORAGE_BUCKET_NAME = \"fixthis-storage\"\n\nMEDIA_ROOT = '/%s/' % DEFAULT_S3_PATH\nMEDIA_URL = '//s3.amazonaws.com/%s/media/' % AWS_STORAGE_BUCKET_NAME\nSTATIC_ROOT = \"/%s/\" % STATIC_S3_PATH\nSTATIC_URL = '//s3.amazonaws.com/%s/static/' % AWS_STORAGE_BUCKET_NAME\nADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'\n\nMEDIA_CACHE_BUSTER = 'Pow'\n\n# Additional locations of static files\nSTATICFILES_DIRS = (\n    # Put strings here, like \"/home/html/static\" or \"C:/www/django/static\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n\nTHUMBNAIL_ALIASES = {\n    '': {\n        'small_square': {'size': (50, 50), 'crop': True},\n    },\n}\n\nAUTH_PROFILE_MODULE = \"FixThis.Profile\"\n\n# List of finder classes that know how to find static files in\n# various locations.\nSTATICFILES_FINDERS = (\n    'django.contrib.staticfiles.finders.FileSystemFinder',\n    'django.contrib.staticfiles.finders.AppDirectoriesFinder',\n#    'django.contrib.staticfiles.finders.DefaultStorageFinder',\n)\n\n# Make this unique, and don't share it with anybody.\nSECRET_KEY = 'qf6h3d3w@fku1ig+s0ule24^lq#ucgp$=o05a9(cd^$aei$k2q'\n\n# List of callables that know how to import templates from various sources.\nTEMPLATE_LOADERS = (\n    'django.template.loaders.filesystem.Loader',\n    'django.template.loaders.app_directories.Loader',\n#     'django.template.loaders.eggs.Loader',\n)\n\nAUTHENTICATION_BACKENDS = (\n    'FixThis.backends.EmailOrUsernameModelBackend',\n    'django.contrib.auth.backends.ModelBackend'\n)\n\nMIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n\n    'FixThis.middleware.DisableCSRF',\n    # 'FixThis.middleware.AttachLocation',\n    # 'debug_toolbar.middleware.DebugToolbarMiddleware',\n    # Uncomment the next line for simple clickjacking protection:\n    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n)\n\nTEMPLATE_CONTEXT_PROCESSORS = (\n    \"django.contrib.auth.context_processors.auth\",\n    \"django.core.context_processors.debug\",\n    \"django.core.context_processors.i18n\",\n    \"django.core.context_processors.media\",\n    \"django.core.context_processors.static\",\n    \"django.core.context_processors.tz\",\n    'django.core.context_processors.request'\n    \"django.contrib.messages.context_processors.messages\"\n)\n\nROOT_URLCONF = 'FixThis.urls'\n\n# Python dotted path to the WSGI application used by Django's runserver.\nWSGI_APPLICATION = 'FixThis.wsgi.application'\n\nTEMPLATE_DIRS = (\n    cwd + '/templates/'\n    # Put strings here, like \"/home/html/django_templates\" or \"C:/www/django/templates\".\n    # Always use forward slashes, even on Windows.\n    # Don't forget to use absolute paths, not relative paths.\n)\n\nINTERNAL_IPS = ('127.0.0.1',)\n\nINSTALLED_APPS = (\n    # Django's contributed apps:\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.sites',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.admin',\n    'django.contrib.markup',\n\n    # Our app:\n    'FixThis',\n\n    # Third-party apps\n    'south',\n    'gunicorn',\n    'places',\n    # 'sorl.thumbnail',\n    'html5',\n    'taggit',\n    'storages',\n    's3_folder_storage',\n    # 'debug_toolbar',\n    'athumb',\n)\n\n# A sample logging configuration. The only tangible logging\n# performed by this configuration is to send an email to\n# the site admins on every HTTP 500 error when DEBUG=False.\n# See http://docs.djangoproject.com/en/dev/topics/logging for\n# more details on how to customize your logging configuration.\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'filters': {\n        'require_debug_false': {\n            '()': 'django.utils.log.RequireDebugFalse'\n        }\n    },\n    'handlers': {\n        'mail_admins': {\n            'level': 'ERROR',\n            'filters': ['require_debug_false'],\n            'class': 'django.utils.log.AdminEmailHandler'\n        }\n    },\n    'loggers': {\n        'django.request': {\n            'handlers': ['mail_admins'],\n            'level': 'ERROR',\n            'propagate': True,\n        },\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":7599}]],"length":7599}
